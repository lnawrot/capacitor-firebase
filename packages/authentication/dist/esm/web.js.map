{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type {\n  ActionCodeSettings,\n  AuthCredential as FirebaseAuthCredential,\n  User as FirebaseUser} from 'firebase/auth';\nimport {\n  signInWithEmailLink,\n  sendSignInLinkToEmail,\n  connectAuthEmulator,\n  FacebookAuthProvider,\n  getAuth,\n  GoogleAuthProvider,\n  OAuthCredential,\n  OAuthProvider,\n  signInWithCustomToken,\n  signInWithPopup,\n} from 'firebase/auth';\n\nimport type {\n  AuthCredential,\n  AuthStateChange,\n  FirebaseAuthenticationPlugin,\n  GetCurrentUserResult,\n  GetIdTokenResult,\n  SetLanguageCodeOptions,\n  SignInResult,\n  SignInWithCustomTokenOptions,\n  SignInWithPhoneNumberOptions,\n  UseEmulatorOptions,\n  User,\n} from './definitions';\n\nexport class FirebaseAuthenticationWeb\n  extends WebPlugin\n  implements FirebaseAuthenticationPlugin {\n  constructor() {\n    super();\n    const auth = getAuth();\n    auth.onAuthStateChanged(user => this.handleAuthStateChange(user));\n  }\n\n  public async getCurrentUser(): Promise<GetCurrentUserResult> {\n    const auth = getAuth();\n    const userResult = this.createUserResult(auth.currentUser);\n    const result: GetCurrentUserResult = {\n      user: userResult,\n    };\n    return result;\n  }\n\n  public async getIdToken(): Promise<GetIdTokenResult> {\n    const auth = getAuth();\n    const idToken = await auth.currentUser?.getIdToken();\n    const result: GetIdTokenResult = {\n      token: idToken || '',\n    };\n    return result;\n  }\n\n  public async setLanguageCode(options: SetLanguageCodeOptions): Promise<void> {\n    const auth = getAuth();\n    auth.languageCode = options.languageCode;\n  }\n\n  public async signInWithApple(): Promise<SignInResult> {\n    const provider = new OAuthProvider('apple.com');\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = OAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithFacebook(): Promise<SignInResult> {\n    const provider = new FacebookAuthProvider();\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithGithub(): Promise<SignInResult> {\n    const provider = new OAuthProvider('github.com');\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = OAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithGoogle(): Promise<SignInResult> {\n    const provider = new GoogleAuthProvider();\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithMicrosoft(): Promise<SignInResult> {\n    const provider = new OAuthProvider('microsoft.com');\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = OAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithPlayGames(): Promise<SignInResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async signInWithTwitter(): Promise<SignInResult> {\n    const provider = new OAuthProvider('twitter.com');\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = OAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithYahoo(): Promise<SignInResult> {\n    const provider = new OAuthProvider('yahoo.com');\n    const auth = getAuth();\n    const result = await signInWithPopup(auth, provider);\n    const credential = OAuthProvider.credentialFromResult(result);\n    return this.createSignInResult(result.user, credential);\n  }\n\n  public async signInWithPhoneNumber(\n    _options: SignInWithPhoneNumberOptions,\n  ): Promise<SignInResult> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async signInWithCustomToken(\n    options: SignInWithCustomTokenOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const result = await signInWithCustomToken(auth, options.token);\n    return this.createSignInResult(result.user, null);\n  }\n\n  public async sendSignInLinkToEmail(\n    options: { email: string, settings: ActionCodeSettings },\n  ): Promise<void> {\n    const auth = getAuth();\n    return sendSignInLinkToEmail(auth, options.email, options.settings);\n  }\n  public async signInWithEmailLink(\n    { email, url }: { email: string, url: string },\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const result = await signInWithEmailLink(auth, email, url);\n    return this.createSignInResult(result.user, null);\n  }\n\n  public async signOut(): Promise<void> {\n    const auth = getAuth();\n    await auth.signOut();\n  }\n\n  public async useAppLanguage(): Promise<void> {\n    const auth = getAuth();\n    auth.useDeviceLanguage();\n  }\n\n  public async useEmulator(options: UseEmulatorOptions): Promise<void> {\n    const auth = getAuth();\n    const port = options.port || 9099;\n    connectAuthEmulator(auth, `${options.host}:${port}`);\n  }\n\n  private handleAuthStateChange(user: FirebaseUser | null): void {\n    const userResult = this.createUserResult(user);\n    const change: AuthStateChange = {\n      user: userResult,\n    };\n    this.notifyListeners('authStateChange', change);\n  }\n\n  private createSignInResult(\n    user: FirebaseUser,\n    credential: FirebaseAuthCredential | null,\n  ): SignInResult {\n    const userResult = this.createUserResult(user);\n    const credentialResult = this.createCredentialResult(credential);\n    const result: SignInResult = {\n      user: userResult,\n      credential: credentialResult,\n    };\n    return result;\n  }\n\n  private createUserResult(user: FirebaseUser | null): User | null {\n    if (!user) {\n      return null;\n    }\n    const result: User = {\n      displayName: user.displayName,\n      email: user.email,\n      emailVerified: user.emailVerified,\n      isAnonymous: user.isAnonymous,\n      phoneNumber: user.phoneNumber,\n      photoUrl: user.photoURL,\n      providerId: user.providerId,\n      tenantId: user.tenantId,\n      uid: user.uid,\n    };\n    return result;\n  }\n\n  private createCredentialResult(\n    credential: FirebaseAuthCredential | null,\n  ): AuthCredential | null {\n    if (!credential) {\n      return null;\n    }\n    const result: AuthCredential = {\n      providerId: credential.providerId,\n    };\n    if (credential instanceof OAuthCredential) {\n      result.accessToken = credential.accessToken;\n      result.idToken = credential.idToken;\n      result.secret = credential.secret;\n    }\n    return result;\n  }\n}\n"]}